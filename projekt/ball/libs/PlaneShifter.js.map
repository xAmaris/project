{"version":3,"file":null,"sources":["../src/PlaneShifter.js"],"sourcesContent":["/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/PlaneDrag\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\n\n// the jacky way to get THREE from a browser or npm\nvar TROIS = null;\n\n\n/**\n* PlaneShifter is an helper for TROIS.Object3D that contains 3 orthogonal planes.\n* The purpose is to make an easy translation of the whole container along each plane's normal vector, \n* and the same for rotation.\n* The module THREE must be defined in advanced.\n*/\nclass PlaneShifter {\n  \n  /**\n  * @param {THREE.Object3D} planeContainer - an object that contains 3 orthogonal planes\n  * @param {THREE.Camera} camera - camera\n  * @param {Object} options - {mouse: THREE.Vector2, control: THREE.OrbitControl, rotationKey: String, translationKey: String}. \n  * Default values: rotationKey=\"KeyR\" translationKey=\"KeyT\"\n  */\n  constructor( planeContainer, camera, options = {}){\n    this._requireThree();\n    \n    this._enabled = true;\n    \n    // contains the three planes\n    this._planeContainer = planeContainer;\n    \n    // camera we use to cast rays\n    this._camera = camera;\n    \n    // orbit control or trackball control\n    this._controls = this._getOption(options, \"controls\", null);\n    \n    // the mouse coord can be passed by an extenal pointer\n    this._mouse = this._getOption(options, \"mouse\", new TROIS.Vector2(Infinity, Infinity));\n    this._useReferenceMouse = !!(options.mouse)\n    \n    // 3D position (world) of the clicking\n    this._pointClicked3D = null;\n    \n    // equivalent to _pointClicked3D but in screen coordinates\n    this._pointClicked2D = null;\n    \n    // to cast rays\n    this._raycaster = new TROIS.Raycaster();\n    \n    // if true, the camera will follow the center of the container\n    this._cameraFollowObject = false;\n    \n    // keep track of what keyboard/mouse key is pressed. In the form {\"KeyT\": true, \"mouse\": false} \n    this._keyPressed = {};\n    \n    // distance from the plane container to the camera\n    this._originalDistanceToCam = this._camera.position.clone().sub( this._planeContainer.position ).length();\n    \n    // for the picker AND the shift. default is from -Infinity to +Infinity\n    this._boundingBox = new TROIS.Box3( new TROIS.Vector3(-Infinity, -Infinity, -Infinity), new TROIS.Vector3(Infinity, Infinity, Infinity));\n    \n    // values involved in the rotation\n    this._rotateConfig = {}\n    \n    // values involved in the rotation\n    this._shiftConfig = {}\n    \n    // list of possible states\n    this._states = {IDLE:0, TRANSLATION: 1, ROTATION:2}\n    \n    // current state\n    this._activeState = this._states.IDLE;\n    \n    var rotationKey = this._getOption(options, \"rotationKey\", \"KeyR\");\n    var translationKey = this._getOption(options, \"rotationKey\", \"KeyT\");\n    \n    // keys associated with states\n    this._keysStates = {};\n    this._keysStates[ rotationKey ] = this._states.ROTATION;\n    this._keysStates[ translationKey ] = this._states.TRANSLATION;\n    \n    this._initNormals();\n    this._initEvents();\n    \n    // all the following are array of events\n    this._customEvents = {\n      startInteraction: [],\n      stopInteraction: [],\n      rotation: [],\n      translation: []\n    }\n    \n  }\n  \n\n  /**\n  * [PRIVATE]\n  * Hacky way to make sure THREE is around, from with a browser or a npm package\n  */\n  _requireThree(){\n    try {\n      TROIS = (window && window.THREE) || require('three');\n    } catch(e) {\n      // here, window.THREE does not exist (or not yet)\n      \n      // trying to require\n      try {\n        TROIS = require(\"three\"); \n      } catch (e) {\n        // here, require is not possible (we are certainly in a browser)\n        console.error( e );\n      }\n    }\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * get a value from the option argument in the constructor\n  */\n  _getOption(optionsObject, key, defaultValue){\n    if(!optionsObject)\n      return defaultValue;\n      \n    return optionsObject[ key ] || defaultValue;\n  }\n  \n  \n  /**\n  * Define a boundingbox to restrict the raycasting and the shift\n  * @param {TROIS.Box3} b - bounding box\n  */\n  setBoundingBox( b ){\n    this._boundingBox = b.clone();\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * initialize a normal vector for each plane\n  */\n  _initNormals(){\n    this._planeContainer.children.forEach( function(plane){\n      plane.userData.normalV = new TROIS.Vector3(0, 0, 1).applyQuaternion(plane.quaternion).normalize();\n    })\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * Initialize all the mouse/keyboard events\n  */\n  _initEvents(){\n    window.addEventListener( 'mousemove', this._onMouseMove.bind(this), false );\n    window.addEventListener( 'mousedown', this._onMouseDown.bind(this), false );\n    window.addEventListener( 'mouseup', this._onMouseUp.bind(this), false );\n    window.addEventListener( 'keyup', this._onKeyUp.bind(this), false );\n    window.addEventListener( 'keydown', this._onKeyDown.bind(this), false );\n  }\n  \n  \n  /**\n  * [PRIVATE - EVENT]\n  * when mouse is moving, refreshes the internal normalized mouse position\n  */\n  _onMouseMove( evt ){\n    if( !this._enabled )\n      return;\n    \n    // do not recompute the unit mouse coord if we use an external mouse reference\n    if(!this._useReferenceMouse){\n      this._mouse.x = ( evt.clientX / window.innerWidth ) * 2 - 1;\n      this._mouse.y = - ( evt.clientY / window.innerHeight ) * 2 + 1;\n    }\n    \n    this._followInteraction();\n  }\n  \n  \n  /**\n  * [PRIVATE - EVENT]\n  * when mouse is clicked, cast a ray if the right keyboard key is maintained pushed\n  */\n  _onMouseDown( evt ){\n    if( !this._enabled )\n      return;\n      \n    this._keyPressed.mouse = true;\n      \n    if( this._activeState != this._states.IDLE )\n      this._raycast();\n  }\n  \n  \n  /**\n  * [PRIVATE - EVENT]\n  * when mouse is releasing\n  */\n  _onMouseUp( evt ){\n    if( !this._enabled )\n      return;\n      \n    this._keyPressed.mouse = false;\n    this._interacting = false;\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * tell if a key from the keyboard is pressed\n  * @param {String} keycode - the keycode of the keypressed\n  * @return {Boolean} true if yes, false if not\n  */\n  _isKeyPressed( keycode ){\n    return ((keycode in this._keyPressed ) && this._keyPressed[keycode]);\n  }\n  \n  \n  /**\n  * [PRIVATE - EVENT]\n  * when a key from the keyboard is pressed. Refreshes the current state\n  */\n  _onKeyUp( evt ){\n    if( !this._enabled )\n      return;\n      \n    this._keyPressed[ evt.code ] = false;\n    this._evaluateCurentState();\n  }\n  \n  \n  /**\n  * [PRIVATE - EVENT]\n  * when a key from the keyboard is released. Refreshes the current state\n  */\n  _onKeyDown( evt ){\n    if( !this._enabled )\n      return;\n      \n    this._keyPressed[ evt.code ] = true;\n    this._evaluateCurentState();\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Evaluate the current state and enable or disable the control upon this state\n  */\n  _evaluateCurentState(){\n    var previousState = this._activeState;\n    this._activeState = this._states.IDLE;\n    \n    var listOfKeys = Object.keys( this._keysStates )\n    \n    for(var i=0; i<listOfKeys.length; i++){\n      if( listOfKeys[i] in this._keyPressed ){\n        if( this._keyPressed[ listOfKeys[i] ] ){\n          this._activeState = this._keysStates[ listOfKeys[i] ]\n          break;\n        }\n      }\n    }  \n    \n    // to trigger only once\n    if( previousState != this._activeState){\n      if( this._activeState == this._states.IDLE ){\n        this._enableControl();\n        this._triggerEvents( \"stopInteraction\" )\n      }else{\n        this._disableControl();\n        this._triggerEvents( \"startInteraction\" )\n      } \n    }\n    \n    \n  }\n  \n  \n  /**\n  * Whether or not the camera should follow the object\n  * @param {Boolean} b - true to follow, false to not follow\n  */\n  setCameraFollowObject(b){\n    this._cameraFollowObject = b;\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * Get screen coordinates of a 3D position\n  * @param {TROIS.Vector3} coord3D - 3D position.\n  * Note: the project method is not reliable when the point is out of screen\n  */\n  _getScreenCoord(coord3D){\n    var tempVector =  coord3D.clone();\n    tempVector.project( this._camera );\n    return new TROIS.Vector2(tempVector.x, tempVector.y);\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * Performs a raycasting on the children of the plane container, then based on the\n  * active state, take a decision of what to do.\n  */\n  _raycast(){\n    this._raycaster.setFromCamera( this._mouse, this._camera );\n    var intersects = this._raycaster.intersectObject( this._planeContainer, true );\n    \n    for(var i=0; i<intersects.length; i++){\n      if( this._boundingBox.containsPoint( intersects[i].point) ){\n\n        switch (this._activeState) {\n          case this._states.TRANSLATION :\n            this._castedRayForTranslation( intersects[i] );\n            break;\n            \n          case this._states.ROTATION :\n            this._castedRayForRotation( intersects[i] );\n            break\n            \n          default:\n            \n        }\n        \n        break;\n      }\n    }\n    \n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * Deals with an intersection in the context of a translation\n  * @param {Object} intersect - result from a TROIS.Raycaster.intersectObject\n  * (not the array, but rather the single object)\n  */\n  _castedRayForTranslation( intersect ){\n    this._interacting = true;\n    var intersectPlane = intersect.object;\n    this._shiftConfig.originalObjectPosition = this._planeContainer.position.clone();\n    \n    this._shiftConfig.hitPoint3D = intersect.point.clone();\n    this._shiftConfig.hitPoint2D = this._mouse.clone();  //this._getScreenCoord( this._shiftConfig.hitPoint3D );\n    this._shiftConfig.planeNormalInternal3D = intersectPlane.userData.normalV.clone();\n    this._shiftConfig.planeNormalWorld3D = intersectPlane.userData.normalV.clone().applyQuaternion(this._planeContainer.quaternion).normalize();\n    this._shiftConfig.topPoint3D = this._shiftConfig.hitPoint3D.clone().add( this._shiftConfig.planeNormalWorld3D );\n    this._shiftConfig.topPoint2D = this._getScreenCoord( this._shiftConfig.topPoint3D );\n    \n    // this one is not normalized in 2D because we need the real projection from the normalized 3D vector\n    this._shiftConfig.planeNormal2D = new TROIS.Vector2( \n      this._shiftConfig.topPoint2D.x - this._shiftConfig.hitPoint2D.x,\n      this._shiftConfig.topPoint2D.y - this._shiftConfig.hitPoint2D.y )\n    \n    this._shiftConfig.hitPoint3DInternal = this._planeContainer.worldToLocal( intersect.point.clone() );\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * Continue the interaction (but mostly decide which kind and delegate the work)\n  */\n  _followInteraction(){\n    if( ! this._interacting )\n      return;\n      \n    switch (this._activeState) {\n      case this._states.TRANSLATION :\n        this._followTranslation()\n        break;\n        \n      case this._states.ROTATION :\n        this._followRotation();\n        break\n        \n      default:\n        \n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * When a translation has started, this method keep updating the position of the\n  * shifting plane.\n  */\n  _followTranslation(){\n\n    // the 2D shift performed by the mouse since the last hit  \n    var mouseShift = new TROIS.Vector2(\n      this._mouse.x - this._shiftConfig.hitPoint2D.x,\n      this._mouse.y - this._shiftConfig.hitPoint2D.y\n    )\n    \n    // we are weighting the shift by the the camera distance ratio compared to the initial camera distance\n    var newContainerToCamDistance = this._camera.position.clone().sub( this._planeContainer.position ).length();\n\n    var normal2DLengthOnScreen = this._shiftConfig.planeNormal2D.length();\n    var normalFactor = mouseShift.dot( this._shiftConfig.planeNormal2D.clone().normalize() ) / normal2DLengthOnScreen;\n    var shift3D = this._shiftConfig.planeNormalWorld3D.clone().multiplyScalar( normalFactor );\n    \n    var newPosition = new TROIS.Vector3(\n      this._shiftConfig.originalObjectPosition.x + shift3D.x,\n      this._shiftConfig.originalObjectPosition.y + shift3D.y,\n      this._shiftConfig.originalObjectPosition.z + shift3D.z\n    )\n    \n    if(this._boundingBox.containsPoint( newPosition ) ){\n      this._planeContainer.position.set(\n        this._shiftConfig.originalObjectPosition.x + shift3D.x,\n        this._shiftConfig.originalObjectPosition.y + shift3D.y,\n        this._shiftConfig.originalObjectPosition.z + shift3D.z\n      )\n      \n      // trigger the event\n      this._triggerEvents( \"translation\" );\n    }\n    \n    if( this._cameraFollowObject ){\n      this._camera.lookAt( this._planeContainer.position )\n    }\n    \n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * Disable the orbit/trackball control\n  */\n  _disableControl(){\n    if(!this._controls)\n      return;\n      \n    if(this._controls.enabled){\n      this._saveOrbitData();\n    }\n      \n    this._controls.enabled = false;\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * enable the orbit/trackball control\n  */\n  _enableControl(){\n    if(!this._controls)\n      return;\n      \n    // if already enables\n    if( this._controls.enabled )\n      return;\n      \n    this._controls.enabled = true;\n    this._restoreOrbitData()\n      \n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * Helper method to call before disabling the controls\n  */\n  _saveOrbitData(){\n    this._orbitData = {\n      target: new TROIS.Vector3(),\n      position: new TROIS.Vector3(),\n      zoom: this._controls.object.zoom\n    }\n\n    this._orbitData.target.copy(this._controls.target);\n    this._orbitData.position.copy(this._controls.object.position);\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Helper method to call before re-enabling the controls\n  */\n  _restoreOrbitData(){\n    this._controls.position0.copy(this._orbitData.position);\n    \n    if(this._cameraFollowObject){\n      this._controls.target0.copy(this._planeContainer.position)\n    }else{\n      this._controls.target0.copy(this._orbitData.target);\n    }\n    \n    this._controls.zoom0 = this._orbitData.zoom;\n    this._controls.reset();\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * Deals with an intersection in the context of a rotation\n  * @param {Object} intersect - result from a TROIS.Raycaster.intersectObject\n  * (not the array, but rather the single object)\n  */\n  _castedRayForRotation( intersect ){\n    this._interacting = true;\n    var intersectPlane = intersect.object;\n    this._rotateConfig.originalObjectRotation = this._planeContainer.rotation.clone();\n\n    this._rotateConfig.hitPoint2D = this._mouse.clone(); \n    this._rotateConfig.planeNormalInternal3D = intersectPlane.userData.normalV.clone();\n    this._rotateConfig.planeNormalWorld3D = intersectPlane.userData.normalV.clone().applyQuaternion(this._planeContainer.quaternion).normalize();\n    this._rotateConfig.center3D = this._planeContainer.getWorldPosition();\n    this._rotateConfig.center2D = this._getScreenCoord( this._rotateConfig.center3D );\n    \n    this._rotateConfig.cameraObjectVector = new TROIS.Vector3( \n      this._camera.position.x - this._rotateConfig.center3D.x,\n      this._camera.position.y - this._rotateConfig.center3D.y,\n      this._camera.position.z - this._rotateConfig.center3D.z\n    ).normalize();\n    \n    // if the plane if facing front or back the camera, we have to apply a diferent sign to the rotation\n    this._rotateConfig.cameraSign = Math.sign( this._rotateConfig.planeNormalWorld3D.dot( this._rotateConfig.cameraObjectVector ) );\n    \n  }\n  \n\n  /**\n  * [PRIVATE]\n  * When a translation has started, this method keep updating the position of the\n  * shifting plane.\n  */\n  _followRotation(){\n    var center = this._rotateConfig.center2D;\n    var start = this._rotateConfig.hitPoint2D;\n    var current = this._mouse.clone();\n    \n    var centerToStart = new TROIS.Vector3(\n      start.x - center.x,\n      start.y - center.y,\n      start.z - center.z\n    ).normalize();\n    \n    var centerToCurrent = new TROIS.Vector3(\n      current.x - center.x,\n      current.y - center.y,\n      current.z - center.z\n    ).normalize();\n    \n    // the rotation angle (unsigned)\n    var angleRad = Math.acos( centerToStart.dot(centerToCurrent) );\n    \n    // the rotation direction depends on the normal of the angle\n    var angleDirection = Math.sign( centerToStart.cross(centerToCurrent).z );\n\n    // reseting from the original position (we dont play with little deltas here!)\n    this._planeContainer.rotation.set(\n      this._rotateConfig.originalObjectRotation.x,\n      this._rotateConfig.originalObjectRotation.y,\n      this._rotateConfig.originalObjectRotation.z\n    )\n\n    this._planeContainer.rotateOnAxis(this._rotateConfig.planeNormalInternal3D,  angleRad * angleDirection * this._rotateConfig.cameraSign )\n    \n    // trigger the event\n    this._triggerEvents( \"rotation\" );\n  }\n  \n  \n  /**\n  * Enable or disable the PlaneShifter instance\n  * @param {Boolean} bool - true: enable, false: disable\n  */\n  enable( bool ){\n    this._enabled = bool;\n  }\n  \n  \n  /**\n  * specify an event\n  */\n  on( eventName, callback ){\n    if(typeof(callback) === 'function'){\n      if( eventName in this._customEvents ){\n        this._customEvents[ eventName ].push( callback );\n      }\n    }\n  }\n  \n  \n  _triggerEvents( eventName ){\n    if( eventName in this._customEvents ){\n      var events = this._customEvents[eventName];\n      \n      for(var i=0; i<events.length; i++){\n        events[i]()\n      }\n    }\n  }\n  \n} /* END of class PlaneShifter */\n\nexport { PlaneShifter }\n"],"names":[],"mappings":"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"}